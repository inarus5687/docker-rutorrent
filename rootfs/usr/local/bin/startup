#!/usr/bin/env sh

CSI="\033["
CEND="${CSI}0m"
CRED="${CSI}1;31m"
CGREEN="${CSI}1;32m"
CYELLOW="${CSI}1;33m"
CBLUE="${CSI}1;34m"

f_log() {
  LOG_TYPE="${1}"
  LOG_MESSAGE="${2}"

  case "${LOG_TYPE}" in
    "INF")
      echo -en "${CBLUE}[$(date +%Y/%m/%d-%H:%M:%S)] ${LOG_MESSAGE}${CEND}"
    ;;
    "SUC")
      echo -e "${CGREEN}${LOG_MESSAGE}${CEND}"
    ;;
    "WRN")
      echo -e "${CYELLOW}[$(date +%Y/%m/%d-%H:%M:%S)] ${LOG_MESSAGE}${CEND}"
    ;;
    "ERR")
      echo -e "${CRED}[$(date +%Y/%m/%d-%H:%M:%S)] ${LOG_MESSAGE}${CEND}"
    ;;
  esac
}

f_log INF "Create torrent user... "

if [ -z "$(grep :${GID}: /etc/group)" ]; then
  addgroup -g "${GID}" torrent
fi

if [ -z "$(grep :${UID}: /etc/passwd)" ]; then
  group="$(grep :${GID}: /etc/group | cut -f 1 -d :)"
  adduser -h /home/torrent -s /bin/sh -G "${group}" -D -u "${UID}" torrent
  f_log SUC "done" # success of Create torrent user
elif [ -e /config/rtorrent/.rtorrent.rc ]; then
  f_log SUC "done" # success of Create torrent user
else
  echo ""
  f_log ERR "Unable to create torrent user, you cannot use UID ${UID}"
  exit 1
fi

f_log INF "Create volume folders... "
mkdir -p /data/.watch /data/.session /data/downloads
mkdir -p /config/rtorrent /config/rutorrent /config/custom_themes /config/custom_plugins
f_log SUC "done" # success of Create volume folders

f_log INF "Generate configuration... "

# Externalize rutorrent configuration
if [ -d /config/rutorrent/conf ]; then
  rm -rf /rutorrent/app/conf
  ln -s /config/rutorrent/conf /rutorrent/app/conf
else
  mv /rutorrent/app/conf /config/rutorrent
  ln -s /config/rutorrent/conf /rutorrent/app/conf
fi

# Externalize rutorrent share
if [ -d /config/rutorrent/share ]; then
  rm -rf /rutorrent/app/share
  ln -s /config/rutorrent/share /rutorrent/app/share
else
  mv /rutorrent/app/share /config/rutorrent
  ln -s /config/rutorrent/share /rutorrent/app/share
fi

# Add custom plugins
[ "$(ls /config/custom_plugins)" ] && for plugin in $(ls /config/custom_plugins); do
  if [ ! -d "/rutorrent/app/plugins/${plugin}" ]; then
    ln -s "/config/custom_plugins/${plugin}" "/rutorrent/app/plugins/${plugin}"
  fi
done

# Add custom themes
[ "$(ls /config/custom_themes)" ] && for theme in $(ls /config/custom_themes); do
  if [ ! -d "/rutorrent/app/plugins/theme/themes/${theme}" ]; then
    ln -s "/config/custom_themes/${theme}" "/rutorrent/app/plugins/theme/themes/${theme}"
  fi
done

sed -e "s|<MODE_DHT>|${MODE_DHT}|g" -e "s|<PORT_DHT>|${PORT_DHT}|g" -e "s|<PEER_EXCHANGE>|${PEER_EXCHANGE}|g" -e "s|<PORT_RTORRENT>|${PORT_RTORRENT}|g" -i /home/torrent/.rtorrent.rc

# Externalize rtorrent configuration
if [ -e /config/rtorrent/.rtorrent.rc ]; then
  mv /config/rtorrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc.old
  mv /home/torrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc
  ln -s /config/rtorrent/.rtorrent.rc /home/torrent/.rtorrent.rc
else
  mv /home/torrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc
  ln -s /config/rtorrent/.rtorrent.rc /home/torrent/.rtorrent.rc
fi

f_log SUC "done" # success of Generate configuration

f_log INF "HTTP authentication configuration... "

# Add http authentication
if [ "${HTTP_AUTH}" = true ]; then
  mkdir -p /config/nginx/passwd
  sed -e "s|<auth>|auth_basic \"rutorrent\";\n    auth_basic_user_file \"/config/nginx/passwd/rutorrent_passwd\";|g" -i /etc/nginx/nginx.conf
else
  sed "/<auth>/d" -i /etc/nginx/nginx.conf
fi

f_log SUC "done" # success of HTTP authentication configuration

# Filebot configuration
if [ -e /filebot/filebot.sh ]; then
  f_log INF "Configuration of filebot... "
  mkdir -p /data/media /config/filebot

  # Externalize filebot data folder
  if [ -d /config/filebot/data ]; then
    rm -rf /filebot/data
    ln -s /config/filebot/data /filebot/data
  else
    mkdir -p /config/filebot/data
    rm -rf /filebot/data
    ln -s /config/filebot/data /filebot/data
  fi

  # Add license file
  if [ ! -e "${FILEBOT_LICENSE}" ]; then
    f_log ERR "License filebot file does not exist"
    exit 1
  elif [ ! -e /filebot/data/.license ]; then
    /filebot/filebot.sh --license "${FILEBOT_LICENSE}"
  fi

  # Externalize args_amc.txt file
  if [ -e /config/filebot/args_amc.txt ]; then
    ln -sf /config/filebot/args_amc.txt /filebot/args_amc.txt
  else
    mv /filebot/args_amc.txt /config/filebot/args_amc.txt
    ln -s /config/filebot/args_amc.txt /filebot/args_amc.txt
  fi

  # Custom postdl script
  if [ -e /config/filebot/postdl ]; then
    ln -sf /config/filebot/postdl /usr/local/bin/postdl
  fi

  if [ -z "$(grep ^method.set_key.*event.download.finished,filebot /home/torrent/.rtorrent.rc)" ]; then
    echo 'method.set_key = event.download.finished,filebot,"execute2=/usr/local/bin/postdl,$d.base_path=,$d.name="' >> /home/torrent/.rtorrent.rc
  fi

  if [ -z "$(grep ^method.set_key.*event.download.erased,filebot_cleaner /home/torrent/.rtorrent.rc)" ]; then
    echo 'method.set_key = event.download.erased,filebot_cleaner,"execute2=/usr/local/bin/postrm"' >> /home/torrent/.rtorrent.rc
  fi

  find /filebot ! -user "${UID}" -exec chown -h "${UID}:${GID}" {} \;
  chmod +x /usr/local/bin/postdl /usr/local/bin/postrm
  f_log SUC "done" # success of Configuration of filebot
fi

f_log INF "Update old configurations... "
/usr/local/bin/update-config
f_log SUC "done" # success of Update old configurations

f_log INF "Apply system permissions... "

for folder in /config /rutorrent /rutorrent/app/php/share/torrents /home/torrent /var/lib/nginx /var/log /etc/nginx /etc/php81 /tmp /etc/s6.d /run; do
  find "${folder}" ! -user "${UID}" -exec chown -h "${UID}:${GID}" {} \;
done

find /etc/s6.d -type f -exec chmod +x {} \;
f_log SUC "done" # success of Apply system permissions

# set perm
chown "${UID}:${GID}" /data/.watch /data/.session /data/downloads

if [ "${CHECK_PERM_DATA}" = true ]; then
  f_log INF "Apply data permissions... "
  find /data ! -user "${UID}" -exec chown -h "${UID}:${GID}" {} \;
  f_log SUC "done" # success of Apply data permissions
fi

rm -f /data/.session/rtorrent.lock

exec su-exec "${UID}":"${GID}" "$@"
